//
//  main.swift
//  BaseballGame
//
//  Created by YoungJin on 11/4/24.
//

class BaseballGame {
    
    
    func start() {
        // 기록 초기화 , 시작멘트,
        let answer = makeAnswer() // 정답을 만드는 함수
        
    }
    
    func makeAnswer() -> [Int] {
        // 함수 내부를 구현하기 , 서로 다른 임의의 수 3개 생성하기
        var randomNumbers: [Int] = []
        
        while randomNumbers.count < 3 {
            let randomNum = Int.random(in: 1...9)
            
            if !randomNumbers.contains(randomNum) {
                randomNumbers.append(randomNum)
            }
        }
        return randomNumbers
    }
    
    while true {
        // 1. 유저에게 입력값을 받음
        
        // 2. 정수로 변환되지 않는 경우 반복문 처음으로 돌아가기
        
        // 3. 세자리가 아니거나, 0을 가지거나 특정 숫자가 두번 사용된 경우 반복문 처음으로 돌아가기
        
        // 4. 정답과 유저의 입력값을 비교하여 스트라이크/볼을 출력하기
        // 만약 정답이라면 break 호출하여 반복문 탈출
    }
}

let random1 = BaseballGame().makeAnswer()

// makeAnswer 3자리수의 랜덤 숫자 뽑기 ?


// 1안
// 1. 한자리 수의 배열 만들기
// 반복되지 않는 3자리 숫자를 위한               var Array = [1, 2, 3, 4, 5, 6 ,7 ,8 ,9]
// 2. makeAnswer 메서드에서 랜덤숫자뽑기        Array.randomElement() - ?
// 3. 하나의 수를 선택 후 선택한 수 배열에서 삭제    [2, 3, 4, 5, 6, 7, 8, 9]
// 4. 반복하여 총 한자리 수 3개를 뽑아냄           [ 1, j, k ]
// 5. 새로운 배열에 [i, j, k] 로 만들기
// 5. 3자리 수로 붙이기 i * 100 + j * 10 + k


//  2안 - 빈배열로 만들고 랜덤값 넣기
//    Array: [Int] = []         -> [ i, j, k ]
//
//  중복 제거 - ? 비교?  i = j  ( x )
//  하나씩 뽑아서 총 3개 배열만들고 3자리고 변환시키기
//  i * 100 + j * 10 + k



//  3안 - 중복없는 set 으로 만든 후 3자리수로 변환 ?
// 1. 빈 배열로 만들고 집합으로 변경
//
// [] -> [ i, j, k ]  ->  < i, j, k >   set은 중복이 없다 중간
// < 5 6 5 3 5 7 >
// 2. 집합에서 숫자 뽑아내기 i * 100 + j * 10 + k
//  ijk 123
// 생각해야 할 것
// 코드의 짜임새, 효율성, 재사용성 ex) 3자리에서 5자리로 된다면 ?



// Lv 2


// 숫자 비교 외부에서 입력한 수와 정답비교하기
// 7. 맞출 3자리 수 입력
 // abc

// 8. 올바르지 않은 입력값 설정
// abc 에 세자리 숫자 아니면 오류
// 같은 숫자 있을 시 오류
// 0 들어가면 오류


// 9. 같은 숫자가 있는지 확인
// a -> 첫째자리 반복문 돌려서 같은지 찾기 같으면 스트라이크 += 1 ,
//      없으면 둘째자리 반복문 찾기 있으면 -> 볼 += 1 , 없으면 0 , 셋째자리 반복
// abc 반복
// 000 나오면 Nothing


// 10. 세자리수 다 같으면 게임 종료
// 3스트라이크 시
// abc == ijk ( 게임종료 )

// 11. 올바르지 않은 입력값 설정
// abc 에 세자리 숫자 아니면 오류
// 같은 숫자 있을 시 오류
// 0 들어가면 오류



// ------------------------------------------------------------

// Lv 3
// 0 ~ 9 로 구현하기
// 맨 앞자리 0 불가
// 300 불가 같은 숫자 있을 시 오류 (Lv 2 동일)


// Lv 4 시작 시 안내문구
// 1.게임시작하기 ( 멘트추가 )  2.기록보기  3. 종료하기 ( 처음으로 , 초기화 ? )


// Lv 5 게임 기록 보기 구현
// 1번 째 게임 : 시도 횟수 - ??
// 입력값 받은 횟수 계산 , 종료 전? 종료 시 ? 횟수 저장



// Lv 6 종료하기 선택 시 종료 및 안내문구, 123 이외의 입력값 오류 설정
// 종료하기 구현 , 멘트 , 초기화 ( 기록 초기화 ) 4~ 입력 오류 설정
